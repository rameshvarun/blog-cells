{"version":3,"file":"blog-cells.js","mappings":"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","sources":["webpack://blog-cells/./src/blog-cells-worker.ts","webpack://blog-cells/./src/blog-cells.tsx"],"sourcesContent":["export default \"globalThis.cellConsole = {};\\ncellConsole.__proto__ = console;\\nlet EXECUTION_ID = 0;\\nfunction generateExecutionID() {\\n    return EXECUTION_ID++;\\n}\\n/** Format an argument for printing to the output console. */\\nfunction formatArg(arg) {\\n    try {\\n        if (arg === undefined)\\n            return \\\"undefined\\\";\\n        else if (arg === null)\\n            return \\\"null\\\";\\n        else if (Array.isArray(arg)) {\\n            return \\\"[\\\" + arg.map(formatArg).join(\\\", \\\") + \\\"]\\\";\\n        }\\n        else if (typeof arg === \\\"string\\\") {\\n            return `\\\"${arg}\\\"`;\\n        }\\n        else if (typeof arg === \\\"object\\\") {\\n            if (arg.toString === {}.toString) {\\n                return JSON.stringify(arg);\\n            }\\n            else {\\n                return arg.toString();\\n            }\\n        }\\n        else {\\n            return String(arg);\\n        }\\n    }\\n    catch (e) {\\n        return \\\"<FORMAT-ERROR>\\\";\\n    }\\n}\\nfunction formatArgs(args) {\\n    return args\\n        .map((arg) => {\\n        if (typeof arg === \\\"string\\\")\\n            return arg;\\n        else\\n            return formatArg(arg);\\n    })\\n        .join(\\\" \\\");\\n}\\nclass Executor {\\n    constructor() {\\n        this.ready = Promise.resolve();\\n        // The current module containing all the exported\\n        // values of the cells.\\n        this.module = {};\\n        globalThis.module = this.module;\\n    }\\n    run(code, output = (type, line) => { }) {\\n        const done = this.ready\\n            .then(async () => {\\n            Object.assign(cellConsole, {\\n                log: (...args) => {\\n                    output(\\\"log\\\", formatArgs(args));\\n                },\\n                info: (...args) => {\\n                    output(\\\"log\\\", formatArgs(args));\\n                },\\n                error: (...args) => {\\n                    output(\\\"error\\\", formatArgs(args));\\n                },\\n                warn: (...args) => {\\n                    output(\\\"warn\\\", formatArgs(args));\\n                },\\n                assert: (condition, ...args) => {\\n                    if (!condition) {\\n                        const message = args.length > 0\\n                            ? \\\"Assertion Failed: \\\" + formatArgs(args)\\n                            : \\\"Assertion Failed\\\";\\n                        output(\\\"error\\\", message);\\n                    }\\n                },\\n            });\\n            const module = `// ExecutionID: ${generateExecutionID()};\\nconst $ = globalThis.module;\\nconst console = globalThis.cellConsole;\\n${code}`;\\n            console.log(module);\\n            const dataURL = \\\"data:text/javascript;base64,\\\" + btoa(module);\\n            const exports = await import(dataURL);\\n            // Write exports onto the module object.\\n            Object.assign(this.module, exports);\\n            for (const prop of Object.getOwnPropertyNames(cellConsole)) {\\n                delete cellConsole[prop];\\n            }\\n        })\\n            .catch((error) => {\\n            output(\\\"error\\\", error.toString());\\n        });\\n        this.ready = done;\\n        return done;\\n    }\\n}\\nconst executor = new Executor();\\nself.onmessage = async (e) => {\\n    console.log(\\\"Worker received message: %o\\\", e);\\n    const requestID = e.data.requestID;\\n    if (e.data.kind === \\\"run-code\\\") {\\n        self.postMessage({\\n            kind: \\\"run-code-waiting\\\",\\n            requestID: requestID,\\n        });\\n        await executor.run(e.data.code, (type, output) => {\\n            self.postMessage({\\n                kind: \\\"run-code-output\\\",\\n                requestID: requestID,\\n                output: {\\n                    type: type,\\n                    line: output,\\n                },\\n            });\\n        });\\n        self.postMessage({\\n            kind: \\\"run-code-done\\\",\\n            requestID: requestID,\\n        });\\n    }\\n};\\n\";","const SCRIPT_URL = import.meta.url;\nconst SCRIPT_DIR = SCRIPT_URL.substring(0, SCRIPT_URL.lastIndexOf(\"/\"));\n\n// @ts-ignore\nimport WORKER_SRC from '!raw-loader!ts-loader!./blog-cells-worker.ts'\n\nfunction LoadCSS(href: string) {\n  return new Promise<void>((resolve, reject) => {\n    let link = document.createElement(\"link\");\n    link.rel = \"stylesheet\";\n    link.href = href;\n    link.onload = () => resolve();\n    document.head.appendChild(link);\n  });\n}\n\nfunction LoadScript(href: string) {\n  return new Promise<void>((resolve, reject) => {\n    let script = document.createElement(\"script\");\n    script.type = \"application/javascript\";\n    script.src = href;\n    script.onload = () => resolve();\n    document.head.appendChild(script);\n  });\n}\n\nconst domLoaded = new Promise<void>((resolve) => {\n  document.addEventListener(\"DOMContentLoaded\", () => resolve());\n});\n\nconst resources: string[] = [\n  // CodeMirror\n  \"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.9/codemirror.min.css\",\n  \"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.9/theme/monokai.min.css\",\n  \"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.9/codemirror.min.js\",\n  \"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/mode/javascript/javascript.min.js\",\n\n  // Font Awesome\n  \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css\",\n\n  // React\n  \"https://cdnjs.cloudflare.com/ajax/libs/react/18.2.0/umd/react.development.min.js\",\n  \"https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.2.0/umd/react-dom.development.min.js\",\n];\n\nasync function loadResource() {\n  for (const resource of resources) {\n    if (resource.endsWith(\".js\")) {\n      await LoadScript(resource);\n    } else if (resource.endsWith(\".css\")) {\n      await LoadCSS(resource);\n    } else {\n      throw new Error(`Unknown resource type.`);\n    }\n  }\n}\n\ndeclare var React: any;\ndeclare var ReactDOM: any;\ndeclare var CodeMirror: any;\n\nPromise.all([domLoaded, loadResource()]).then(() => {\n  const blob = new Blob([WORKER_SRC], {type: 'application/javascript'});\n\n  let worker: Worker = new Worker(URL.createObjectURL(blob));\n  function restartWorker() {\n    if (worker) {\n      console.log(\"Terminating existing worker...\");\n      worker.terminate();\n    }\n    worker = new Worker(URL.createObjectURL(blob));\n  }\n\n  let requestID = 0;\n  function getRequestID() {\n    return requestID++;\n  }\n\n  const editors: any[] = [];\n\n  const events = new EventTarget();\n\n  class Cell extends React.Component {\n    codeMirror: any;\n\n    constructor(props) {\n      super(props);\n      this.state = { kind: \"ready\", output: [] };\n\n      this.editor = React.createRef();\n      this.codeMirror = null;\n\n      this.running = false;\n      this.mounted = false;\n\n      if (props.autoRun) {\n        this.run(props.code);\n      }\n\n      events.addEventListener(\"worker-restarted\", () => {\n        this.setState({ kind: \"ready\", output: [] });\n      });\n    }\n\n    render() {\n      return (\n        <div className=\"code-mirror-container\">\n          <textarea ref={this.editor} defaultValue={this.props.code}></textarea>\n          {this.state.output.length > 0 ? (\n            <div>\n              <pre className=\"snippet-output\">\n                {this.state.output.map((output, i) => (\n                  <div className=\"output-${output.type}\" key={i}>\n                    {output.line}\n                  </div>\n                ))}\n              </pre>\n            </div>\n          ) : null}\n\n          <div\n            className={\n              \"run-bar run-bar-\" +\n              (this.state.kind === \"running\" ? \"running\" : \"ready\")\n            }\n            onClick={() => this.run(this.codeMirror.getValue())}\n          >\n            {this.state.kind === \"ready\" ? (\n              <div>\n                <i className=\"fa-solid fa-play\"></i> RUN\n              </div>\n            ) : null}\n            {this.state.kind === \"re-runnable\" ? (\n              <div>\n                <i className=\"fa-solid fa-arrows-rotate\"></i> RE-RUN\n              </div>\n            ) : null}\n            {this.state.kind === \"running\" ? (\n              <img\n                style={{\n                  height: \"0.8em\",\n                  margin: \"0px\",\n                }}\n                src={`${SCRIPT_DIR}/three-dots.svg`}\n              ></img>\n            ) : null}\n          </div>\n        </div>\n      );\n    }\n\n    componentDidMount() {\n      this.mounted = true;\n      this.codeMirror = CodeMirror.fromTextArea(this.editor.current, {\n        mode: \"javascript\",\n        theme: \"monokai\",\n        lineNumbers: true,\n      });\n      editors.push(this.codeMirror);\n    }\n\n    async run(code) {\n      if (this.running) return;\n\n      console.log(\"Running snippet...\");\n      this.running = true;\n\n      if (this.mounted) {\n        this.setState({ kind: \"running\", output: [] });\n      } else {\n        this.state = { kind: \"running\", output: [] };\n      }\n\n      const requestID = getRequestID();\n\n      worker.postMessage({\n        kind: \"run-code\",\n        code: code,\n        requestID: requestID,\n      });\n\n      const minimumWait = new Promise<void>((resolve, reject) => {\n        setTimeout(() => resolve(), 500);\n      });\n\n      const messageHandler = async (e) => {\n        if (e.data.requestID != requestID) return;\n        if (e.data.kind === \"run-code-done\") {\n          // Wait the minimum amount of run-time.\n          await minimumWait;\n\n          this.running = false;\n          this.setState((state) => {\n            state.kind = \"re-runnable\";\n            if (state.output.length === 0)\n              state.output.push({ type: \"log\", line: \"Done.\" });\n            return state;\n          });\n          worker.removeEventListener(\"message\", messageHandler);\n        } else if (e.data.kind === \"run-code-output\") {\n          this.setState((state) => {\n            state.output.push(e.data.output);\n            return state;\n          });\n        }\n      };\n      worker.addEventListener(\"message\", messageHandler);\n    }\n  }\n\n  const scripts = document.querySelectorAll(\n    \"script[type='text/notebook-cell'], pre.notebook-cell\"\n  ) as NodeListOf<HTMLScriptElement>;\n\n  for (const script of scripts) {\n    const code = script.textContent?.trim() || \"\";\n    const autoRun = script.dataset.autorun === \"true\";\n    const hidden = script.dataset.hidden === \"true\";\n\n    const editor = document.createElement(\"div\");\n    script.after(editor);\n    script.remove();\n\n    const root = ReactDOM.createRoot(editor);\n    root.render(<Cell code={code} autoRun={autoRun} hidden={hidden} />);\n  }\n});\n"],"names":[],"sourceRoot":""}